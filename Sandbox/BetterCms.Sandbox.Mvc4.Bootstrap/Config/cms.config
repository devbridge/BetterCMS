<?xml version="1.0"?>
<cms
      useMinifiedResources="false"
      resourcesBasePath="(local)"
      loginUrl="/?returnUrl={returnUrl}" 
      webSiteUrl="Auto" 
      pageNotFoundUrl="/404/"
      workingDirectoryRootPath="~/App_Data/BetterCms"
      articleUrlPattern="/articles/{0}/"      
      urlMode="TrailingSlash"
      renderContentEndingDiv="false"
      contentEndingDivCssClassName="bcms-clearfix" ><!-- urlMode Possible values: NoTrailingSlash, TrailingSlash, Mixed -->

  <urlPatterns>
    <add expression="\/(bin|app_code|app_globalresources|app_localresources|app_data|app_browsers|theme)\/" ignoreCase="true" negate="true" description="{0} cannot contain these as directories: bin, App_Code, App_GlobalResources, App_Localresources, App_Data, App_Browsers, Theme" />
  </urlPatterns>

  <installation
    Install404ErrorPage="true"
    Install500ErrorPage="true"
    InstallDefaultPage="true">
  </installation>

  <users
      createDefaultUserOnStart="true"
      enableCmsFormsAuthentication="true"      
    />
  
  <!-- ******************** STORAGE *********************** -->
  <!-- serviceType="FileSystem" defines to use server's file system as the uploads storage. -->
  <!-- processTimeout defines how much time file will be marked as processing, while it turns to failed. -->
  <storage serviceType="FileSystem" contentRoot="~/uploads/" contentRootUrl="~/uploads" processTimeout="00:30:00" />
  
  <!-- serviceType="Ftp" defines to use FTP server as the upload storage:
  <storage serviceType="Ftp" contentRoot="[images root]/" contentRootUrl="[path to access files publically]" processTimeout="00:30:00">
    <add key="FtpRoot" value="[ftp root]" />
    <add key="FtpUserName" value="[ftp user name]" />
    <add key="FtpPassword" value="[ftp password]" />
    <add key="UsePassiveMode" value="false" />
  </storage>
   -->

  <!-- serviceType="Auto" defines to use concrete storage service implementation defined with the typeName property.
  If BetterCms.Module.AmazonS3Storage is installed:
  <storage serviceType="Auto" contentRoot="[images root]" contentRootUrl="[path to access files publically]" processTimeout="00:30:00">
    <add key="AmazonAccessKey" value="[your access key]" />
    <add key="AmazonSecretKey" value="[your secret key]" />
    <add key="AmazonBucketName" value="[your bucket name]" />
    <add key="AmazonTokenExpiryTime" value="00:01:00" />
  </storage>
   
  If BetterCms.Module.WindowsAzureStorage is installed:
   <storage serviceType="Auto" contentRoot="[images root]" contentRootUrl="[path to access files publically]" processTimeout="00:30:00">
    <add key="AzureAccountName" value="[your access key]" />
    <add key="AzureSecondaryKey" value="[your secret key]" />
    <add key="AzureContainerName" value="[your Azure container name]" />
    <add key="AzureUseHttps" value="[your bucket name]" />
    <add key="AzureTokenExpiryTime" value="00:01:00" />
  </storage>
  -->

  
  <!-- serviceType="Custom" defines to use concrete storage service implementation defined with the typeName property.
  <storage serviceType="Custom" contentRoot="[path to upload files]" contentRootUrl="[path to access files publically]" processTimeout="00:30:00">
    <add key="typeName" value="BetterCms.Sandbox.Mvc4.Bootstrap.Custom.CustomStorageServiceTest, BetterCms.Sandbox.Mvc4.Bootstrap"/>
  </storage>
  -->
  
  <!-- ******************** CACHE *********************** -->
  <!-- cacheType="HttpRuntime" is default cache provider. -->
  <cache enabled="false" timeout="00:10:00" cacheType="HttpRuntime" />
  
  <!-- CacheType="Auto" indicates to scan for the cache service in the installed modules list.   
  <cache enabled="true" timeout="00:10:00" cacheType="Auto" /> -->

  <!-- CacheType="Custom" defines to use concrete cache service implementation defined with the typeName property.
  <cache enabled="true" timeout="00:10:00" cacheType="Custom">
    <add key="typeName" value="BetterCms.Sandbox.Mvc4.Bootstrap.Custom.CustomCacheTest, BetterCms.Sandbox.Mvc4.Bootstrap"/>
  </cache> -->
  
  <database
     schemaName="dbo"
     connectionStringName="BetterCms"
     databaseType="MsSql2008" > 
  </database>

  <security 
            accessControlEnabled="false"
            fullAccessRoles="Owner" 
            encryptionEnabled="false" 
            encryptionKey="bettercmstest">
    <defaultAccessRules defaultAccessLevel="ReadWrite">
      <add identity="Everyone" accessLevel="Deny" isRole="true" />
      <add identity="Authenticated Users" accessLevel="ReadWrite" isRole="true" />
    </defaultAccessRules>
    <!-- If custom role provider is used instead of "BetterCms.Module.Users.Provider.RoleProvider", 
      custom roles need to be mapped to BetterCMS permissions. Example:-->
    <!--<customRoles>
      <add permission="BcmsEditContent" roles="User" />
      <add permission="BcmsPublishContent" roles="User" />
      <add permission="BcmsDeleteContent" roles="User, Admin" />
      <add permission="BcmsAdministration" roles="Admin" />
    </customRoles>-->
  </security>

  <moduleGallery
    feedUrl="http://mynugetfeed.com/nuget">
  </moduleGallery>
</cms>
